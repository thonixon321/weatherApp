{"remainingRequest":"/Users/developertom/vueProjects/weather/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/developertom/vueProjects/weather/src/components/current-conditions.vue?vue&type=style&index=0&id=7e94c0c8&scoped=true&lang=css&","dependencies":[{"path":"/Users/developertom/vueProjects/weather/src/components/current-conditions.vue","mtime":1579625008000},{"path":"/Users/developertom/vueProjects/weather/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/developertom/vueProjects/weather/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/developertom/vueProjects/weather/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/developertom/vueProjects/weather/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/developertom/vueProjects/weather/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmN1cnJlbnRXZWF0aGVyIHsKICB3aWR0aDogMjNlbTsKICBtYXJnaW46IDFlbSA2ZW07Cn0KCi5mb3JlY2FzdENvbnRhaW5lciB7CiAgd2lkdGg6IDEwMCU7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LXdyYXA6IHdyYXA7Cn0KCi5mb3JlY2FzdEl0ZW17CiAgd2lkdGg6IDIzZW07CiAgbWFyZ2luLXRvcDogMmVtOwogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICBhbGlnbi1pdGVtczogY2VudGVyOwp9CgouaW5mb0NvbnRhaW5lciB7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47Cn0KCi5jdXJyZW50RGVzY3JpcHRpb24gewogIGZvbnQtc2l6ZTogMS40MmVtOwogIGZvbnQtd2VpZ2h0OiBib2xkOwogIHRleHQtYWxpZ246IGNlbnRlcjsKfQouY3VycmVudENvbmRpdGlvbnMgewogIHdpZHRoOiA5MCU7CiAgZm9udC13ZWlnaHQ6IGJvbGQ7Cn0KLmN1cnJlbnRDb25kaXRpb25zIGRpdnsKICBib3JkZXItdG9wOiAxcHggZGFzaGVkICM5Yjk3OTc7Cn0KCi5pbnZhbGlkIHsKICBib3JkZXI6IDFweCBzb2xpZCByZWQ7Cn0KCi5ob3QgewogIGNvbG9yOiByZWQ7Cn0K"},{"version":3,"sources":["current-conditions.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyJA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"current-conditions.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n\r\n  <div class=\"currentWeather\">\r\n    <div class=\"forecastContainer\">\r\n      <div class=\"forecastItem\">\r\n        <h1>Current Conditions for {{ cityName }}</h1>\r\n        <!-- icon/description -->\r\n\r\n          <Moon class='icon' v-if=\"currentData.textDesc == 'Dark'\" />\r\n          <Snow class='icon' v-else-if=\"currentData.textDesc == 'Snowy'\" />\r\n          <Wind class='icon' v-else-if=\"currentData.textDesc == 'Windy'\" />\r\n          <Cloud class='icon' v-else-if=\"currentData.textDesc == 'Mostly Cloudy'\" />\r\n          <Cloud class='icon' v-else-if=\"currentData.textDesc == 'Cloudy'\" />\r\n          <Storm class='icon' v-else-if=\"currentData.textDesc == 'Stormy'\" />\r\n          <Storm class='icon' v-else-if=\"currentData.textDesc == 'Heavy Rain'\" />\r\n          <Ice class='icon' v-else-if=\"currentData.textDesc == 'Icy'\" />\r\n          <Rain class='icon' v-else-if=\"currentData.textDesc == 'Partly Cloudy'\" />\r\n          <Rain class='icon' v-else-if=\"currentData.textDesc == 'Rain'\" />\r\n          <Rain class='icon' v-else-if=\"currentData.textDesc == 'Rain Showers'\" />\r\n          <Rain class='icon' v-else-if=\"currentData.textDesc == 'Light Rain'\" />\r\n          <Snow class='icon' v-else-if=\"currentData.textDesc == 'Chance Rain And Snow Showers'\" />\r\n          <Rain class='icon' v-else-if=\"currentData.textDesc == 'Widespread Rain Showers'\" />\r\n          <Rain class='icon' v-else-if=\"currentData.textDesc == 'Chance Rain Showers'\" />\r\n          <Sun class='icon' v-else />\r\n\r\n          <h3>{{ currentData.textDesc }}</h3>\r\n\r\n        <div class='currentConditions'>\r\n          <!-- temp -->\r\n          <div class='infoContainer currentTemp' :class=\"currentData.temperature > 81 ? 'hot' : ''\">\r\n          <span class='infoItem'>Current Temperature:</span> <span class='infoItem'>{{ currentData.temperature }}Â°F</span>\r\n          </div>\r\n          <!-- wind -->\r\n          <div class='infoContainer currentWind'>\r\n             <span class='infoItem'>Wind speed:</span> <span class='infoItem'> {{ currentData.windSpeed }}</span>\r\n          </div>\r\n          <div class='infoContainer currentWind'>\r\n             <span class='infoItem'>Wind direction:</span> <span v-if=\"currentData.windDir !== null\" class='infoItem'>{{ currentData.windDir }}</span>\r\n          </div>\r\n\r\n          <!-- time -->\r\n          <div class='currentTime'>\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\n\r\nimport { mapState } from 'vuex';\r\nimport Moon from '../assets/weather_assets/moon.vue';\r\nimport Sun from '../assets/weather_assets/sun.vue';\r\nimport Cloud from '../assets/weather_assets/cloud.vue';\r\nimport Snow from '../assets/weather_assets/snow.vue';\r\nimport Wind from '../assets/weather_assets/wind.vue';\r\nimport Ice from '../assets/weather_assets/ice.vue';\r\nimport Storm from '../assets/weather_assets/storm.vue';\r\nimport Rain from '../assets/weather_assets/rain.vue';\r\n//props have to be in the file that will use them (declared in msg from App.vue)\r\nexport default {\r\n  name: 'current-conditions',\r\n\r\n  data: function() {\r\n    return {\r\n\r\n    }\r\n  },\r\n\r\n  props: ['cityName'],\r\n\r\n\r\n  computed: {\r\n    //anytime data point tempC is updated,\r\n    //tempF runs\r\n    tempF: function () {\r\n      if (this.currentData.temperature !== null) {\r\n        return Math.round(this.currentData.temperature * (9/5) + 32);\r\n      }else{\r\n        return ('');\r\n      }\r\n    },\r\n\r\n\r\n    windSpeedMPH: function () {\r\n      if (this.currentData.windSpeed !== null) {\r\n        return (this.currentData.windSpeed * 2.237).toFixed(2);\r\n      }else{\r\n        return ('');\r\n      }\r\n    },\r\n\r\n\r\n    pressureHg: function () {\r\n\r\n      return (this.currentData.pressure * 0.00029530).toFixed(2);\r\n    },\r\n\r\n    ...mapState({\r\n\r\n      currentData: state => state.currentWeatherStore.currentData,\r\n      //example of bringing in another store\r\n      // currentData2: state => state.currentData\r\n\r\n      // //namespace (module name)\r\n      // 'currentWeatherStore',\r\n      // //state properties\r\n      // ['currentData']\r\n    }\r\n    )\r\n\r\n\r\n\r\n\r\n  },\r\n\r\n\r\n\r\n  methods: {},\r\n\r\n\r\n\r\n  created: function() {\r\n\r\n  },\r\n\r\n\r\n  //on load - this fires\r\n  mounted: function() {\r\n    //just practice for $emit (goes upwards to parent)\r\n    this.$emit('loadMethod', {loaded: true});\r\n  },\r\n\r\n    components: {\r\n      Moon,\r\n      Cloud,\r\n      Sun,\r\n      Snow,\r\n      Wind,\r\n      Ice,\r\n      Storm,\r\n      Rain\r\n\r\n    }\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n  .currentWeather {\r\n    width: 23em;\r\n    margin: 1em 6em;\r\n  }\r\n\r\n  .forecastContainer {\r\n    width: 100%;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n  }\r\n\r\n  .forecastItem{\r\n    width: 23em;\r\n    margin-top: 2em;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  .infoContainer {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  .currentDescription {\r\n    font-size: 1.42em;\r\n    font-weight: bold;\r\n    text-align: center;\r\n  }\r\n  .currentConditions {\r\n    width: 90%;\r\n    font-weight: bold;\r\n  }\r\n  .currentConditions div{\r\n    border-top: 1px dashed #9b9797;\r\n  }\r\n\r\n  .invalid {\r\n    border: 1px solid red;\r\n  }\r\n\r\n  .hot {\r\n    color: red;\r\n  }\r\n</style>\r\n"]}]}