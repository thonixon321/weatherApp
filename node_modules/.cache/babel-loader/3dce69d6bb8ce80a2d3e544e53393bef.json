{"remainingRequest":"/Users/developertom/vueProjects/weather/node_modules/babel-loader/lib/index.js!/Users/developertom/vueProjects/weather/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/developertom/vueProjects/weather/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/developertom/vueProjects/weather/src/components/hourly-computed.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/developertom/vueProjects/weather/src/components/hourly-computed.vue","mtime":1579625008000},{"path":"/Users/developertom/vueProjects/weather/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/developertom/vueProjects/weather/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/developertom/vueProjects/weather/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/developertom/vueProjects/weather/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdCI7Ci8vCi8vCi8vCi8vCi8vCi8vCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnSG91cmx5Q29tcHV0ZWQnLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4ge307CiAgfSwKICBjb21wdXRlZDogewogICAgLy9jb252ZXJ0IG1pbGl0YXJ5IHRpbWUgdG8gc3RhbmRhcmQKICAgIGZ1bGxUaW1lOiBmdW5jdGlvbiBmdWxsVGltZSgpIHsKICAgICAgdmFyIHN0YXJ0VGltZSA9IG5ldyBEYXRlKHRoaXMudGltZS5zdGFydFRpbWUpLnRvU3RyaW5nKCksCiAgICAgICAgICBzdGFydFNwbGl0ID0gc3RhcnRUaW1lLnNwbGl0KCcgJyksCiAgICAgICAgICBtaWxpdGFyeVN0YXJ0ID0gc3RhcnRTcGxpdFs0XSwKICAgICAgICAgIG1pbGlUaW1lID0gbWlsaXRhcnlTdGFydC50b1N0cmluZygpLAogICAgICAgICAgdGltZSwKICAgICAgICAgIGhvdXJzLAogICAgICAgICAgbWludXRlcywKICAgICAgICAgIHRpbWVWYWx1ZTsKICAgICAgdGltZSA9IG1pbGlUaW1lLnNwbGl0KCc6Jyk7IC8vIGNvbnZlcnQgdG8gYXJyYXkKICAgICAgLy8gZmV0Y2gKCiAgICAgIGhvdXJzID0gTnVtYmVyKHRpbWVbMF0pOwogICAgICBtaW51dGVzID0gTnVtYmVyKHRpbWVbMV0pOyAvLyBjYWxjdWxhdGUKCiAgICAgIGlmIChob3VycyA+IDAgJiYgaG91cnMgPD0gMTIpIHsKICAgICAgICB0aW1lVmFsdWUgPSAiIiArIGhvdXJzOwogICAgICB9IGVsc2UgaWYgKGhvdXJzID4gMTIpIHsKICAgICAgICB0aW1lVmFsdWUgPSAiIiArIChob3VycyAtIDEyKTsKICAgICAgfSBlbHNlIGlmIChob3VycyA9PSAwKSB7CiAgICAgICAgdGltZVZhbHVlID0gIjEyIjsKICAgICAgfSAvLyBnZXQgbWludXRlcwoKCiAgICAgIHRpbWVWYWx1ZSArPSBtaW51dGVzIDwgMTAgPyAiOjAiICsgbWludXRlcyA6ICI6IiArIG1pbnV0ZXM7IC8vIGdldCBBTS9QTQoKICAgICAgdGltZVZhbHVlICs9IGhvdXJzID49IDEyID8gIiBQTSIgOiAiIEFNIjsKICAgICAgcmV0dXJuIHRpbWVWYWx1ZTsKICAgIH0KICB9LAogIHByb3BzOiBbJ3RpbWUnXSwKICBtZXRob2RzOiB7fSwKICB3YXRjaDoge30sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHt9Cn07"},{"version":3,"sources":["hourly-computed.vue"],"names":[],"mappings":";;;;;;;;;;;AAQA,eAAA;AAEA,EAAA,IAAA,EAAA,gBAFA;AAIA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA,EAAA;AAGA,GARA;AAYA,EAAA,QAAA,EAAA;AACA;AACA,IAAA,QAAA,EAAA,oBAAA;AACA,UAAA,SAAA,GAAA,IAAA,IAAA,CAAA,KAAA,IAAA,CAAA,SAAA,EAAA,QAAA,EAAA;AAAA,UACA,UAAA,GAAA,SAAA,CAAA,KAAA,CAAA,GAAA,CADA;AAAA,UAEA,aAAA,GAAA,UAAA,CAAA,CAAA,CAFA;AAAA,UAGA,QAAA,GAAA,aAAA,CAAA,QAAA,EAHA;AAAA,UAIA,IAJA;AAAA,UAKA,KALA;AAAA,UAMA,OANA;AAAA,UAOA,SAPA;AASA,MAAA,IAAA,GAAA,QAAA,CAAA,KAAA,CAAA,GAAA,CAAA,CAVA,CAUA;AAEA;;AACA,MAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA;AACA,MAAA,OAAA,GAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAdA,CAgBA;;AACA,UAAA,KAAA,GAAA,CAAA,IAAA,KAAA,IAAA,EAAA,EAAA;AACA,QAAA,SAAA,GAAA,KAAA,KAAA;AACA,OAFA,MAEA,IAAA,KAAA,GAAA,EAAA,EAAA;AACA,QAAA,SAAA,GAAA,MAAA,KAAA,GAAA,EAAA,CAAA;AACA,OAFA,MAEA,IAAA,KAAA,IAAA,CAAA,EAAA;AACA,QAAA,SAAA,GAAA,IAAA;AACA,OAvBA,CAyBA;;;AACA,MAAA,SAAA,IAAA,OAAA,GAAA,EAAA,GAAA,OAAA,OAAA,GAAA,MAAA,OAAA,CA1BA,CA2BA;;AACA,MAAA,SAAA,IAAA,KAAA,IAAA,EAAA,GAAA,KAAA,GAAA,KAAA;AAEA,aAAA,SAAA;AACA;AAjCA,GAZA;AAkDA,EAAA,KAAA,EAAA,CAAA,MAAA,CAlDA;AAsDA,EAAA,OAAA,EAAA,EAtDA;AA4DA,EAAA,KAAA,EAAA,EA5DA;AAkEA,EAAA,OAAA,EAAA,mBAAA,CAEA;AApEA,CAAA","sourcesContent":["<template>\r\n  <h3>\r\n    {{ fullTime }}\r\n  </h3>\r\n</template>\r\n\r\n<script>\r\n\r\n  export default {\r\n\r\n    name: 'HourlyComputed',\r\n\r\n    data: function() {\r\n      return{\r\n\r\n      }\r\n    },\r\n\r\n\r\n\r\n    computed: {\r\n      //convert military time to standard\r\n      fullTime: function() {\r\n        var startTime = new Date(this.time.startTime).toString(),\r\n            startSplit = startTime.split(' '),\r\n            militaryStart = startSplit[4],\r\n            miliTime = militaryStart.toString(),\r\n            time,\r\n            hours,\r\n            minutes,\r\n            timeValue;\r\n\r\n        time = miliTime.split(':'); // convert to array\r\n\r\n        // fetch\r\n        hours = Number(time[0]);\r\n        minutes = Number(time[1]);\r\n\r\n        // calculate\r\n        if (hours > 0 && hours <= 12) {\r\n          timeValue= \"\" + hours;\r\n        } else if (hours > 12) {\r\n          timeValue= \"\" + (hours - 12);\r\n        } else if (hours == 0) {\r\n          timeValue= \"12\";\r\n        }\r\n\r\n        // get minutes\r\n        timeValue += (minutes < 10) ? \":0\" + minutes : \":\" + minutes;\r\n        // get AM/PM\r\n        timeValue += (hours >= 12) ? \" PM\" : \" AM\";\r\n\r\n        return timeValue;\r\n      }\r\n    },\r\n\r\n\r\n\r\n    props: ['time'],\r\n\r\n\r\n\r\n    methods: {\r\n\r\n    },\r\n\r\n\r\n\r\n    watch: {\r\n\r\n    },\r\n\r\n\r\n\r\n    mounted: function() {\r\n\r\n    }\r\n  }\r\n\r\n</script>\r\n\r\n\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"src/components"}]}